name: tests

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Cache
      uses: actions/cache@v2
      with:
        path: |
          ./thirdparty/build/googletest/lib/Debug
          ~\AppData\Local\pip\Cache
        key: michka-cache
        restore-keys: |
          michka-cache

    - name: Install Python Packages
      run: pip install -r scripts/requirements.txt

    - name: Configure
      run: cmake -Bbuild -T host=x64 -A x64

    - name: Build
      run: cmake --build build --config Debug -j4

    - name: Install Required Softwares
      run: |
        choco upgrade opencppcoverage codecov 7zip.install --no-progress

    - name: Download Mesa
      shell: cmd
      if: hashFiles('build\tests\Debug\x64\opengl32.dll') == '' || hashFiles('build\tests\Debug\x64\libglapi.dll') == ''
      run: |
        curl.exe -L --output mesa.7z --url https://github.com/pal1000/mesa-dist-win/releases/download/20.3.2/mesa3d-20.3.2-release-msvc.7z
        "C:\Program Files\7-Zip\7z.exe" x mesa.7z
      working-directory: build\tests\Debug

    - name: Install Mesa
      shell: cmd
      run: |
        del "opengl32.dll" >nul 2>&1
        del "libglapi.dll" >nul 2>&1
        mklink opengl32.dll "x64\opengl32.dll"
        mklink libglapi.dll "x64\libglapi.dll"
      working-directory: build\tests\Debug

    - name: Run tests
      shell: cmd
      run: call "C:/Program Files/OpenCppCoverage/OpenCppCoverage.exe" --sources "src\*" --excluded_sources "thirdparty\*" --excluded_sources "d:\agent" --export_type "cobertura:coverage.xml" --excluded_line_regex ".*@NOCOVERAGE.*" --excluded_line_regex "\s*else.*" --excluded_line_regex "\s*\}.*" --excluded_line_regex \s*MICHKA_CLASS\(.* "build\tests\Debug\MichkaTests.exe"

    - name: Upload coverage report
      run: codecov -f coverage.xml --root .
